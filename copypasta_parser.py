# -*- coding: utf-8 -*-
"""
Created on Sat May 21 13:51:04 2016

@author: ozer
"""

s = """
Epoch 1/120
250/250 [==============================] - 0s
11.507s loss; 1.615468357 acc; 0.210336538 val_loss; 1.609864867 val_acc; 0.200000000
Epoch 2/120
250/250 [==============================] - 0s
10.769s loss; 1.613515834 acc; 0.188701923 val_loss; 1.610593557 val_acc; 0.200000000
Epoch 3/120
250/250 [==============================] - 0s
10.744s loss; 1.612803678 acc; 0.207532051 val_loss; 1.616043425 val_acc; 0.200000000
Epoch 4/120
250/250 [==============================] - 0s
10.750s loss; 1.620559911 acc; 0.193910256 val_loss; 1.612250895 val_acc; 0.200000000
Epoch 5/120
250/250 [==============================] - 0s
10.708s loss; 1.614937998 acc; 0.195512821 val_loss; 1.617733984 val_acc; 0.200000000
Epoch 6/120
250/250 [==============================] - 0s
10.396s loss; 1.616116891 acc; 0.194711538 val_loss; 1.615536300 val_acc; 0.200000000
Epoch 7/120
250/250 [==============================] - 0s
10.702s loss; 1.616995761 acc; 0.200721154 val_loss; 1.614435437 val_acc; 0.200000001
Epoch 8/120
250/250 [==============================] - 0s
10.650s loss; 1.615685052 acc; 0.195112179 val_loss; 1.612716565 val_acc; 0.200000000
Epoch 9/120
250/250 [==============================] - 0s
10.725s loss; 1.616245047 acc; 0.197516026 val_loss; 1.611618955 val_acc; 0.200000000
Epoch 10/120
250/250 [==============================] - 0s
10.694s loss; 1.614844218 acc; 0.195512821 val_loss; 1.613428357 val_acc; 0.200000000
Epoch 11/120
250/250 [==============================] - 0s
10.685s loss; 1.615795819 acc; 0.197516026 val_loss; 1.610655603 val_acc; 0.200000000
Epoch 12/120
250/250 [==============================] - 0s
10.672s loss; 1.613302067 acc; 0.191105769 val_loss; 1.617853373 val_acc; 0.200000000
Epoch 13/120
250/250 [==============================] - 0s
10.614s loss; 1.616835010 acc; 0.197115385 val_loss; 1.610766102 val_acc; 0.200000000
Epoch 14/120
250/250 [==============================] - 0s
10.651s loss; 1.614604744 acc; 0.183092949 val_loss; 1.621902792 val_acc; 0.200000000
Epoch 15/120
250/250 [==============================] - 0s
10.708s loss; 1.617144955 acc; 0.193910256 val_loss; 1.611739763 val_acc; 0.200000001
Epoch 16/120
250/250 [==============================] - 0s
10.719s loss; 1.616910736 acc; 0.199519231 val_loss; 1.615099597 val_acc; 0.200000000
Epoch 17/120
250/250 [==============================] - 0s
10.811s loss; 1.613338422 acc; 0.204326923 val_loss; 1.618665008 val_acc; 0.200000000
Epoch 18/120
250/250 [==============================] - 0s
10.689s loss; 1.619859006 acc; 0.188701923 val_loss; 1.611066464 val_acc; 0.200000000
Epoch 19/120
250/250 [==============================] - 0s
10.750s loss; 1.614764421 acc; 0.205528846 val_loss; 1.614228434 val_acc; 0.200000000
Epoch 20/120
250/250 [==============================] - 0s
10.742s loss; 1.617369904 acc; 0.200721154 val_loss; 1.617911361 val_acc; 0.200000000
Epoch 21/120
250/250 [==============================] - 0s
10.814s loss; 1.616840359 acc; 0.195112179 val_loss; 1.612490880 val_acc; 0.200000000
Epoch 22/120
250/250 [==============================] - 0s
10.829s loss; 1.614072089 acc; 0.199118590 val_loss; 1.612647757 val_acc; 0.200000000
Epoch 23/120
250/250 [==============================] - 0s
10.770s loss; 1.613958007 acc; 0.193108974 val_loss; 1.615600958 val_acc; 0.200000000
Epoch 24/120
250/250 [==============================] - 0s
10.875s loss; 1.615930363 acc; 0.197516026 val_loss; 1.614282089 val_acc; 0.200000001
Epoch 25/120
250/250 [==============================] - 0s
10.704s loss; 1.616377627 acc; 0.197516026 val_loss; 1.616450654 val_acc; 0.200000000
Epoch 26/120
250/250 [==============================] - 0s
10.818s loss; 1.615282361 acc; 0.195913462 val_loss; 1.612201612 val_acc; 0.200000001
Epoch 27/120
250/250 [==============================] - 0s
10.787s loss; 1.613947428 acc; 0.211939103 val_loss; 1.615638347 val_acc; 0.200000000
Epoch 28/120
250/250 [==============================] - 0s
10.648s loss; 1.616551312 acc; 0.185897436 val_loss; 1.610606809 val_acc; 0.200000000
Epoch 29/120
250/250 [==============================] - 0s
10.575s loss; 1.616975696 acc; 0.196714744 val_loss; 1.613535905 val_acc; 0.200000000


"""
#%%
tokens = s.split(' ')
stokens = []
for token in tokens:
	stokens.extend(token.split('\n'))
losses = []
accs = []
val_losses=[]
for i in range(1,len(tokens)):
	prev = stokens[i-1]
	if prev == 'loss;':
		losses.append(float(stokens[i]))
	if prev == 'acc;':
		accs.append(float(stokens[i]))
	if prev == 'val_loss;':
		val_losses.append(float(stokens[i]))



