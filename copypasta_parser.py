# -*- coding: utf-8 -*-
"""
Created on Sat May 21 13:51:04 2016

@author: ozer
"""

s = """
250/250 [==============================] - 0s
30.966s loss; 1.619613927 acc; 0.210737179 val_loss; 1.623046420 val_acc; 0.200000001
Epoch 6/120
250/250 [==============================] - 0s
31.000s loss; 1.624605873 acc; 0.182291667 val_loss; 1.624079088 val_acc; 0.200000001
Epoch 7/120
250/250 [==============================] - 0s
30.824s loss; 1.620606048 acc; 0.188701923 val_loss; 1.615935297 val_acc; 0.200000001
Epoch 8/120
250/250 [==============================] - 0s
30.919s loss; 1.618865050 acc; 0.199919872 val_loss; 1.616156371 val_acc; 0.200000000
Epoch 9/120
250/250 [==============================] - 0s
30.710s loss; 1.620907495 acc; 0.203525641 val_loss; 1.614263138 val_acc; 0.200000000
Epoch 10/120
250/250 [==============================] - 0s
30.972s loss; 1.620428802 acc; 0.204727564 val_loss; 1.624102390 val_acc; 0.200000000
Epoch 11/120
250/250 [==============================] - 0s
30.986s loss; 1.620359876 acc; 0.196714744 val_loss; 1.612710882 val_acc; 0.200000001
Epoch 12/120
250/250 [==============================] - 0s
30.905s loss; 1.618783197 acc; 0.196314103 val_loss; 1.617156298 val_acc; 0.200000000
Epoch 13/120
250/250 [==============================] - 0s
30.948s loss; 1.618702532 acc; 0.199519231 val_loss; 1.613652848 val_acc; 0.200000000
Epoch 14/120
250/250 [==============================] - 0s
30.879s loss; 1.619110324 acc; 0.197115385 val_loss; 1.616930941 val_acc; 0.200000000
Epoch 15/120
250/250 [==============================] - 0s
30.874s loss; 1.621664001 acc; 0.192708333 val_loss; 1.617613614 val_acc; 0.200000000
Epoch 16/120
250/250 [==============================] - 0s
30.906s loss; 1.621971789 acc; 0.198717949 val_loss; 1.611611669 val_acc; 0.200000000
Epoch 17/120
250/250 [==============================] - 0s
31.132s loss; 1.618551881 acc; 0.204727564 val_loss; 1.620455181 val_acc; 0.200000001
Epoch 18/120
250/250 [==============================] - 0s
31.127s loss; 1.619833365 acc; 0.200320513 val_loss; 1.621665127 val_acc; 0.200000000
Epoch 19/120
250/250 [==============================] - 0s
31.185s loss; 1.622703633 acc; 0.199118590 val_loss; 1.642398649 val_acc; 0.200000000
Epoch 20/120
250/250 [==============================] - 0s
30.936s loss; 1.621374514 acc; 0.209134615 val_loss; 1.611431382 val_acc; 0.200000001
Epoch 21/120
250/250 [==============================] - 0s
30.977s loss; 1.616652241 acc; 0.201522436 val_loss; 1.611205259 val_acc; 0.200000000
Epoch 22/120
250/250 [==============================] - 0s
30.923s loss; 1.617460346 acc; 0.199118590 val_loss; 1.626316470 val_acc; 0.200000001
Epoch 23/120
250/250 [==============================] - 0s
31.041s loss; 1.621476410 acc; 0.202323718 val_loss; 1.633985996 val_acc; 0.200000001
Epoch 24/120
250/250 [==============================] - 0s
31.041s loss; 1.620393860 acc; 0.191506410 val_loss; 1.616088866 val_acc; 0.200000000
Epoch 25/120
250/250 [==============================] - 0s
31.031s loss; 1.622730546 acc; 0.191506410 val_loss; 1.636989283 val_acc; 0.200000000

"""
#%%
tokens = s.split(' ')
stokens = []
for token in tokens:
	stokens.extend(token.split('\n'))
losses = []
accs = []
val_losses=[]
for i in range(1,len(tokens)):
	prev = stokens[i-1]
	if prev == 'loss;':
		losses.append(float(stokens[i]))
	if prev == 'acc;':
		accs.append(float(stokens[i]))
	if prev == 'val_loss;':
		val_losses.append(float(stokens[i]))



